// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PaymentMethodFilter Mobile Implementation renders mobile implementation correctly 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "gap": 8,
      "paddingHorizontal": 24,
    }
  }
  data={[]}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={true}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  showsHorizontalScrollIndicator={false}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
>
  <View />
</RCTScrollView>
`;

exports[`PaymentMethodFilter Mobile Implementation renders with iOS supported payment methods 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "gap": 8,
      "paddingHorizontal": 24,
    }
  }
  data={[]}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={true}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  showsHorizontalScrollIndicator={false}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
>
  <View />
</RCTScrollView>
`;

exports[`PaymentMethodFilter Mobile Implementation renders with selected payment method 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "gap": 8,
      "paddingHorizontal": 24,
    }
  }
  data={[]}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={true}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  showsHorizontalScrollIndicator={false}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
>
  <View />
</RCTScrollView>
`;

exports[`PaymentMethodFilter Shared Components renders PaymentMethodItem correctly 1`] = `
<View
  cancelable={true}
  collapsable={false}
  disabled={false}
  focusVisibleStyle={{}}
  focusable={true}
  forwardedRef={[Function]}
  jestAnimatedStyle={
    {
      "value": {},
    }
  }
  minPressDuration={0}
  onBlur={[Function]}
  onFocus={[Function]}
  onLayout={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onPress={[Function]}
  onPressIn={[Function]}
  onPressOut={[Function]}
  role="button"
  style={
    {
      "backgroundColor": "transparent",
      "borderBottomLeftRadius": 12,
      "borderBottomRightRadius": 12,
      "borderTopLeftRadius": 12,
      "borderTopRightRadius": 12,
      "flexDirection": "column",
      "opacity": 1,
      "transform": [
        {
          "scale": 1,
        },
      ],
    }
  }
>
  <View
    onBlur={[Function]}
    onFocus={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgba(255,255,255,0.12)",
        "borderBottomColor": "rgba(255,255,255,0.12)",
        "borderBottomLeftRadius": 12,
        "borderBottomRightRadius": 12,
        "borderBottomWidth": 1,
        "borderLeftColor": "rgba(255,255,255,0.12)",
        "borderLeftWidth": 1,
        "borderRightColor": "rgba(255,255,255,0.12)",
        "borderRightWidth": 1,
        "borderStyle": "solid",
        "borderTopColor": "rgba(255,255,255,0.12)",
        "borderTopLeftRadius": 12,
        "borderTopRightRadius": 12,
        "borderTopWidth": 1,
        "flexDirection": "row",
        "gap": 4,
        "paddingBottom": 8,
        "paddingLeft": 4,
        "paddingRight": 8,
        "paddingTop": 8,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={20}
      bbWidth={20}
      fill="none"
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      strokeWidth={8}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "color": "#FFFFFF",
            "height": 20,
            "width": 20,
          },
          {
            "flex": 0,
            "height": 20,
            "width": 20,
          },
        ]
      }
      vbHeight={20}
      vbWidth={20}
    >
      <RNSVGGroup
        color="#FFFFFF"
        fill={null}
        propList={
          [
            "fill",
            "strokeWidth",
          ]
        }
        strokeWidth={8}
      >
        <RNSVGPath
          d="M2.5 6.36549C2.5 6.06293 2.67292 5.78699 2.94519 5.65505L8.96698 2.73705C9.61922 2.42098 10.3803 2.42099 11.0325 2.73705L17.0543 5.65505C17.3266 5.78699 17.4995 6.06293 17.4995 6.36549V7.26185C17.4995 7.27251 17.4993 7.28312 17.4989 7.29368C17.4993 7.30381 17.4995 7.31399 17.4995 7.32423C17.4995 7.72565 17.1741 8.05106 16.7727 8.05106H16.7294L16.7101 8.0513H3.28945L3.27012 8.05106H3.22684C2.82542 8.05106 2.5 7.72565 2.5 7.32423C2.5 7.31399 2.50021 7.30381 2.50063 7.29368C2.50021 7.28312 2.5 7.27251 2.5 7.26185V6.36549Z"
          fill={
            {
              "type": 2,
            }
          }
          propList={
            [
              "fill",
            ]
          }
        />
        <RNSVGPath
          d="M4.03958 14.5926C3.60358 14.5926 3.25013 14.9461 3.25013 15.3821V16.7106C3.25013 17.1466 3.60358 17.5 4.03958 17.5H15.9602C16.3962 17.5 16.7497 17.1466 16.7497 16.7106V15.3821C16.7497 14.9461 16.3962 14.5926 15.9602 14.5926H4.03958Z"
          fill={
            {
              "type": 2,
            }
          }
          propList={
            [
              "fill",
            ]
          }
        />
        <RNSVGPath
          d="M6.13177 8.97352C5.69577 8.97352 5.34232 9.32697 5.34232 9.76297V12.9208C5.34232 13.3568 5.69577 13.7102 6.13177 13.7102H6.28966C6.72566 13.7102 7.0791 13.3568 7.0791 12.9208V9.76297C7.0791 9.32697 6.72566 8.97352 6.28966 8.97352H6.13177Z"
          fill={
            {
              "type": 2,
            }
          }
          propList={
            [
              "fill",
            ]
          }
        />
        <RNSVGPath
          d="M9.13151 9.76297C9.13151 9.32697 9.48496 8.97352 9.92096 8.97352H10.0788C10.5148 8.97352 10.8683 9.32697 10.8683 9.76297V12.9208C10.8683 13.3568 10.5148 13.7102 10.0788 13.7102H9.92096C9.48496 13.7102 9.13151 13.3568 9.13151 12.9208V9.76297Z"
          fill={
            {
              "type": 2,
            }
          }
          propList={
            [
              "fill",
            ]
          }
        />
        <RNSVGPath
          d="M13.7102 8.97352C13.2742 8.97352 12.9207 9.32697 12.9207 9.76297V12.9208C12.9207 13.3568 13.2742 13.7102 13.7102 13.7102H13.868C14.304 13.7102 14.6575 13.3568 14.6575 12.9208V9.76297C14.6575 9.32697 14.304 8.97352 13.868 8.97352H13.7102Z"
          fill={
            {
              "type": 2,
            }
          }
          propList={
            [
              "fill",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
    <Text
      allowFontScaling={true}
      maxFontSizeMultiplier={1.4}
      onBlur={[Function]}
      onFocus={[Function]}
      style={
        {
          "color": "#FFFFFF",
          "fontFamily": "Basel Grotesk",
          "fontSize": 15,
          "fontWeight": "400",
          "lineHeight": 19.5,
        }
      }
      suppressHighlighting={true}
    >
      Bank
    </Text>
  </View>
</View>
`;

exports[`PaymentMethodFilter Shared Components renders PaymentMethodItem when not selected 1`] = `
<View
  cancelable={true}
  collapsable={false}
  disabled={false}
  focusVisibleStyle={{}}
  focusable={true}
  forwardedRef={[Function]}
  jestAnimatedStyle={
    {
      "value": {},
    }
  }
  minPressDuration={0}
  onBlur={[Function]}
  onFocus={[Function]}
  onLayout={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onPress={[Function]}
  onPressIn={[Function]}
  onPressOut={[Function]}
  role="button"
  style={
    {
      "backgroundColor": "transparent",
      "borderBottomLeftRadius": 12,
      "borderBottomRightRadius": 12,
      "borderTopLeftRadius": 12,
      "borderTopRightRadius": 12,
      "flexDirection": "column",
      "opacity": 1,
      "transform": [
        {
          "scale": 1,
        },
      ],
    }
  }
>
  <View
    onBlur={[Function]}
    onFocus={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#131313",
        "borderBottomColor": "rgba(255,255,255,0.12)",
        "borderBottomLeftRadius": 12,
        "borderBottomRightRadius": 12,
        "borderBottomWidth": 1,
        "borderLeftColor": "rgba(255,255,255,0.12)",
        "borderLeftWidth": 1,
        "borderRightColor": "rgba(255,255,255,0.12)",
        "borderRightWidth": 1,
        "borderStyle": "solid",
        "borderTopColor": "rgba(255,255,255,0.12)",
        "borderTopLeftRadius": 12,
        "borderTopRightRadius": 12,
        "borderTopWidth": 1,
        "flexDirection": "row",
        "gap": 4,
        "paddingBottom": 8,
        "paddingLeft": 4,
        "paddingRight": 8,
        "paddingTop": 8,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={20}
      bbWidth={20}
      fill="none"
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      strokeWidth={8}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "color": "#FFFFFF",
            "height": 20,
            "width": 20,
          },
          {
            "flex": 0,
            "height": 20,
            "width": 20,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
    >
      <RNSVGGroup
        color="#FFFFFF"
        fill={null}
        propList={
          [
            "fill",
            "strokeWidth",
          ]
        }
        strokeWidth={8}
      >
        <RNSVGPath
          d="M21 8V9.25H3V8C3 6 4 5 6 5H18C20 5 21 6 21 8ZM21 10.75V16C21 18 20 19 18 19H6C4 19 3 18 3 16V10.75H21ZM10.75 15C10.75 14.586 10.414 14.25 10 14.25H7C6.586 14.25 6.25 14.586 6.25 15C6.25 15.414 6.586 15.75 7 15.75H10C10.414 15.75 10.75 15.414 10.75 15Z"
          fill={
            {
              "type": 2,
            }
          }
          propList={
            [
              "fill",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
    <Text
      allowFontScaling={true}
      maxFontSizeMultiplier={1.4}
      onBlur={[Function]}
      onFocus={[Function]}
      style={
        {
          "color": "#FFFFFF",
          "fontFamily": "Basel Grotesk",
          "fontSize": 15,
          "fontWeight": "400",
          "lineHeight": 19.5,
        }
      }
      suppressHighlighting={true}
    >
      Debit
    </Text>
  </View>
</View>
`;

exports[`PaymentMethodFilter Web Implementation renders web implementation correctly 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "gap": 8,
      "overflow": "scroll",
    }
  }
/>
`;

exports[`PaymentMethodFilter Web Implementation renders with Android supported payment methods 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "gap": 8,
      "overflow": "scroll",
    }
  }
/>
`;

exports[`PaymentMethodFilter Web Implementation renders with iOS supported payment methods 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "gap": 8,
      "overflow": "scroll",
    }
  }
/>
`;

exports[`PaymentMethodFilter Web Implementation renders with selected payment method 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "gap": 8,
      "overflow": "scroll",
    }
  }
/>
`;

exports[`PaymentMethodFilter Web Implementation renders with web-specific props 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "gap": 8,
      "overflow": "scroll",
      "width": 24,
    }
  }
  testID="web-filter"
/>
`;
